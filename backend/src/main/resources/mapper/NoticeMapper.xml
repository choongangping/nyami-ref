<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mapper.NoticeMapper">
	<insert id="insertNotice" parameterType="notice">
		INSERT INTO notice (title, content, status, notice_image, views)
		VALUES (#{title}, #{content}, 'active', #{noticeImage, jdbcType=VARCHAR}, 0)
	</insert>
	
	<select id="selectNotice" resultType="notice">
		SELECT * FROM (
		    SELECT n.*, ROWNUM AS rnum FROM (
		        SELECT * FROM notice
                <where>
	                <if test="requestData.keyword != null and requestData.keyword != ''">
	                    ${requestData.column} LIKE '%' || #{requestData.keyword} || '%'
	                </if>
            	</where>
		        ORDER BY id DESC
		    ) n
		)
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<update id="updateNotice">
	    UPDATE notice
	    SET title = #{notice.title},
	        content = #{notice.content},
	        notice_image = #{notice.noticeImage}
	    WHERE id = #{id}
	</update>
	
	<select id="countNotice" resultType="long">
		SELECT COUNT(*) FROM notice
        <where>
	        <if test="keyword != null and keyword != ''">
	            ${column} LIKE '%' || #{keyword} || '%'
	        </if>
    	</where>
	</select>

	<select id="getNoticeList" resultType="notice">
		select * from (
			select notice.* , ROWNUM AS rn 
			from ( select * from notice
					<if test="pageRequest.searchKeyword != null and pageRequest.searchKeyword !=''">
						<choose>
							<when test="pageRequest.searchType == '제목'">
								where title like '%' || #{pageRequest.searchKeyword} || '%'
							</when>
							<when test="pageRequest.searchType == '내용'">
								where content like '%' || #{pageRequest.searchKeyword} || '%'
							</when>
							<when test="pageRequest.searchType == '제목 + 내용'">
								where title like '%' || #{pageRequest.searchKeyword} || '%'
								or content like '%' || #{pageRequest.searchKeyword} || '%'
							</when>
						</choose>
					</if>
					order by created_at desc
				) notice
			where ROWNUM &lt;= #{endRow}   <!-- <= 부분을 &lt;= 로 변경 -->
			)
		 where rn &gt;= #{startRow} <!-- > 부분을 &gt; 로 변경 -->
	</select>
	
	<select id="getCountList" parameterType="String" resultType="int">
		select count(*) from
		notice
		where category = #{category}
	</select>

	<select id="getEventList" resultType="event">
    SELECT *
    FROM (
        SELECT event.*, ROW_NUMBER() OVER (ORDER BY created_at DESC, id ASC) AS rn
        FROM event
        WHERE status = #{status}
        <if test="category != null and category != ''">
            AND category = #{category}
        </if>
    ) subquery
    WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="getNoticeCountList" resultType="int">
		select count(*) from notice
			<if test="pageRequest.searchKeyword != null and pageRequest.searchKeyword !=''">
				<choose>
					<when test="pageRequest.searchType == '제목'">
						where title like '%' || #{pageRequest.searchKeyword} || '%'
					</when>
					<when test="pageRequest.searchType == '내용'">
						where content like '%' || #{pageRequest.searchKeyword} || '%'
					</when>
					<when test="pageRequest.searchType == '제목 + 내용'">
						where title like '%' || #{pageRequest.searchKeyword} || '%'
						or content like '%' || #{pageRequest.searchKeyword} || '%'
					</when>
				</choose>
			</if>
	</select>
	
	<select id="getEventCountList" resultType="int" parameterType="String">
		select count(*) from event where status= #{status}
		<if test="category != null and category != ''">
			and category = #{category}
		</if>
	</select>
	
	
	<select id="getNotice" resultType="notice" parameterType="Long">
		select * from notice where id = #{id}
	</select>
	
	<select id="getPreNotice" resultType="notice" parameterType="Long">
		select * from
		(
			select id,title
			from notice
			where id &lt; #{id}
			order by created_at desc
		)
		where rownum = 1
	</select>
	
	<select id="getNextNotice" resultType="notice" parameterType="Long">
		select * from
		(
			select id,title
			from notice
			where id &gt; #{id}
			order by created_at asc
		)
		where rownum = 1
	</select>

	<select id="getEvent" resultType="event" parameterType="Long">
		select * from event where id = #{id}
	</select>
	
	<select id="getPreEvent" resultType="event" parameterType="Long">
		select * from
		(
			select id,title
			from event
			where id &lt; #{id}
			order by created_at desc
		)
		where rownum = 1
	</select>
	
	<select id="getNextEvent" resultType="event" parameterType="Long">
		select * from
		(
			select id,title
			from event
			where id &gt; #{id}
			order by created_at asc
		)
		where rownum = 1
	</select>
	
	<select id="selectNoticeById" resultType="notice">
		SELECT * FROM notice
		WHERE id=#{id}
	</select>
	
	<update id="inactivateNotice" parameterType="long">
		UPDATE notice SET status='inactive'
		WHERE id=#{id}
	</update>
	
	<update id="reactivateNotice" parameterType="long">
		UPDATE notice SET status='active'
		WHERE id=#{id}
	</update>
	
	<select id="selectEvents" resultType="event">
		SELECT * FROM (
		    SELECT e.*, ROWNUM AS rnum FROM (
		        SELECT * FROM event
                <where>
	                <if test="requestData.keyword != null and requestData.keyword != ''">
	                    ${requestData.column} LIKE '%' || #{requestData.keyword} || '%'
	                </if>
            	</where>
		        ORDER BY id DESC
		    ) e
		) 
		WHERE rnum BETWEEN #{start} AND #{end}
	</select>
	
	<insert id="insertEvent" parameterType="event">
		INSERT INTO event (category, title, content, start_date, end_date, status, event_image, views)
		VALUES (#{category}, #{title}, #{content}, #{startDate}, #{endDate}, 'active', #{eventImage, jdbcType=VARCHAR}, 0)
	</insert>
	
	<update id="updateEvent">
	    UPDATE event
	    SET category = #{event.category},
	    	title = #{event.title},
	        content = #{event.content},
	        start_date = #{event.startDate},
	        end_date = #{event.endDate},
	        event_image = #{event.eventImage}
	    WHERE id = #{id}
	</update>
	
	<select id="selectEventById" resultType="event">
		SELECT * FROM event
		WHERE id=#{id}
	</select>
	
	<update id="inactivateEvent" parameterType="long">
		UPDATE event SET status='inactive'
		WHERE id=#{id}
	</update>
	
	<update id="reactivateEvent" parameterType="long">
		UPDATE event SET status='active'
		WHERE id=#{id}
	</update>
		
	<select id="countEvents" resultType="long">
		SELECT COUNT(*) FROM event
        <where>
            <if test="keyword != null and keyword != ''">
                ${column} LIKE '%' || #{keyword} || '%'
            </if>
    	</where>
	</select>
	
	<update id="updateNoticeViews" parameterType="notice">
		update notice
		set
		views = #{views}
		where id = #{id}
	</update>
	
	<update id="updateEventViews" parameterType="event">
		update event
		set
		views = #{views}
		where id = #{id}
	</update>
</mapper>