<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mapper.MypageMapper">
	<select id="getMember" resultType="Member">
		select * from member
		where
		member_id=#{memberId}
	</select>

	<select id="getMypageLike" resultType="MypageLike">
		select * from
		(
		select
		inner_query.*,ROWNUM as rn
		from(
		select ml.*,s.main_image1,s.store_name
		from member_like ml join store s
		on ml.store_id = s.id
		where ml.member_id = #{pageRequest.memberId}
		order by created_at desc
		) inner_query
		)
		where rn between #{startRow} and #{endRow}
	</select>

	<select id="getCountMypageLike" resultType="int">
		select count(*) from
		member_like
		where member_id = #{id}
	</select>

	<select id="getMypageReview" resultType="MypageReview">
		select * from
		(
		select inner_query.*,ROWNUM as rn
		from(
		select r.*,s.main_image1,s.store_name
		from review r join store s
		on r.store_id = s.id
		where r.member_id = #{pageRequest.memberId}
		and r.status = 'active'
		order by created_at desc
		) inner_query
		)
		where rn between #{startRow} and #{endRow}
	</select>

	<select id="getCountMypageReview" resultType="int">
		select count(*)
		from
		review
		where member_id = #{id}
	</select>

	<select id="getStore" resultType="store">
		select * from
		store
		where
		member_id = #{memberId}
	</select>
	
	<select id="getStoreList" resultType="store">
		select * from
		store
		where
		member_id = #{memberId}
	</select>

	<update id="updateMember" parameterType="Member">
		update
		member
		set
		nickname = #{nickname},
		introduction = #{introduction},
		age = #{age},
		residence = #{residence},
		mbti = #{mbti}
		where id = #{id}
	</update>

	<update id="updatePassword" parameterType="Member">
		update
		member
		set
		passwd
		= #{passwd}
		where id = #{id}
	</update>

	<update id="deleteMember">
		update
		member
		set
		status = 'inactive'
		where id = #{id}
	</update>

	<update id="fileUpload" parameterType="Member">
		update
		member
		set
		profile_image = #{profileImage}
		where id = #{id}
	</update>

	<update id="updateSocialId">
		update member
			<set>
				<choose>
					<when test="socialName == '네이버'">
						naver_id = #{socialId}
					</when>
					<when test="socialName == '카카오'">
						kakao_id = #{socialId}
					</when>
					<when test="socialName == '구글'">
						google_id = #{socialId}
					</when>
				</choose>
				,member_id = CASE WHEN member_id IS NULL THEN #{socialId} ELSE member_id END
			</set>
		where id = #{id}
	</update>
	
	<update id="updateEmail">
		update member
		set
		email = #{email}
		where id = #{id}
	</update>
	
	<update id="updateToBusinessMember" parameterType="map">
		update member set registration_number = #{registrationNumber} , category = '사업자' where member_id = #{memberId}
	</update>
	
	
</mapper>